\ProvidesPackage{mouth}

\RequirePackage{lambda}
\RequirePackage{etoolbox}


% References
%   https://www.ctan.org/tex-archive/macros/generic/lambda-lists?lang=en
%   https://en.wikipedia.org/wiki/Church_encoding
%   http://d.hatena.ne.jp/melpon/20111005/1317799929
%   http://0-chromosome.hatenablog.jp/entry/2015/12/02/000000
%   http://tex.stackexchange.com/questions/24922/comparing-an-argument-to-a-string-when-argument-is-a-result-of-a-command-with-et
%   http://basking-cat.blogspot.jp/2013/04/scalachurch-encoding.html
%   https://hackage.haskell.org/package/base/docs/Data-List.html
%   https://hackage.haskell.org/package/base/docs/Data-Function.html
%   https://hackage.haskell.org/package/base/docs/Data-Maybe.html
%   http://stackoverflow.com/questions/24118741/implementation-of-inits-using-foldr
%   http://stackoverflow.com/questions/24129119/implementing-tails-using-foldr-in-haskell


% Workarounds
%

% "\And" conflicts somewhere?
\def\And{\Undefined}
\newcommand*{\BoolAnd}[2]{#1{#2}\False}
\newcommand*{\BoolOr}{\Or}
\newcommand*{\BoolNot}{\Not}
\def\All#1{\Foldr{\Compose\BoolAnd{#1}}\True}


% Note
%   For structural equality, don't use braces nor \relax, which aren't expandable.

\newcommand*{\CatToken}[2]{#1#2}


% Bool
%

\newcommand*{\Bool}{\TeXif}
\newcommand*{\If}{\Identity}
\newcommand*{\Iftex}{\TeXif}
\newcommand*{\BoolToNum}[1]{\If{#1}{1}{0}}
\newcommand*{\NumToBool}[1]{\If{\NumEq{#1}{0}}\False\True}


% Function
%

\newcommand*{\Id}{\Identity}
\newcommand*{\Const}{\True}
\newcommand*{\Flip}{\Twiddle}
\newcommand*{\Apply}[2]{#1{#2}}
\newcommand*{\Then}{\Flip\Compose}
\newcommand*{\Fix}[1]{#1{\Fix{#1}}}
\newcommand*{\ListCompose}[1]{\Foldr\Compose\Identity{#1}}
\newcommand*{\ComposeList}{\Compose\ListCompose\List}
\newcommand*{\ThenList}[1]{\Foldr\Then\Identity{\List{#1}}}
\newcommand*{\Times}[2]{\ListCompose{\Replicate{#1}{#2}}}


% Prelude
%

\newcommand*{\ErrorMsg}[1]{\errmessage{error: #1}}
\newcommand*{\Assert}[2]{\If{#1}{#2}{\errmessage{assertion failed: \unexpanded{#1}}}}
\newcommand*{\Undefined}{\errmessage{undefined}}


% Test
%

\newcommand*{\AssertTrue}[1]{\If{#1}{}{\errmessage{assertion failed: Expected \unexpanded{#1} to be true, but wasn't}}}
\newcommand*{\AssertFalse}[1]{\If{#1}{\errmessage{assertion failed: Expected \unexpanded{#1} to be false, but wasn't}}{}}

\newcommand*{\AssertEquals}[3]{%
    \If{#1{#2}{#3}}{}{%
        \errmessage{assertion failed: Expected \unexpanded{#3} to be \unexpanded{#2}, but wasn't}%
    }%
}
\newcommand*{\AssertNotEquals}[3]{%
    \If{#1{#2}{#3}}{%
        \errmessage{assertion failed: Expected \unexpanded{#3} to be \unexpanded{#2}, but wasn't}%
    }{}%
}


% List
%   \Null is linear.

\newcommand*{\Unlist}{\Intercalate{,}}% no spaces
\newcommand*{\Expand}{\Intercalate{}}
\newcommand*{\Intercalate}[2]{#2{\Intercalate@{#1}}{}}
\newcommand*{\Intercalate@}[2]{#2\Foldr{\ExpandIII{#1}}{}}
\newcommand*{\ListShow}[1]{[\Unlist{#1}]}% no spaces
\newcommand*{\ListsShow}[1]{\ListShow{\Map\ListShow{#1}}}

\newcommand*{\List}[1]{\List@#1,\Listend@\@eolst}% only works for nonempty lists.
\newcommand*{\Listend@}{}
\def\List@#1,#2\@eolst{%
    \Iftex{\ifx\Listend@#2}{\Singleton{#1}}{\Cons{#1}{\List@#2\@eolst}}%
}
\newcommand*{\ListThen}[1]{\Compose{#1}\List}

% Basic functions
\newcommand*{\Append}{\Cat}
\newcommand*{\Last}{\FoldrI{\Flip\Const}}
\newcommand*{\Init}[1]{\Foldr\Init@{\Const\Nil}{\Tail{#1}}{\Head{#1}}}
\newcommand*{\Init@}[2]{\Flip\Cons{#2{#1}}}
\newcommand*{\Null}{\Isempty}
\newcommand*{\Length}{\Foldr\Length@{0}}
\newcommand*{\Length@}[2]{\NumInc{#2}}

% Reducing lists
\newcommand*{\FoldlI}[2]{\Foldl{#1}{\Head{#2}}{\Tail{#2}}}
\newcommand*{\FoldrI}[2]{\Foldr{\FoldrI@{#1}}{\Id}{\Tail{#2}}{\Head{#2}}}
\newcommand*{\FoldrI@}[3]{\Flip{#1}{#3{#2}}}

% Special folds
\newcommand*{\Concat}{\Foldr\Append\Nil}
\newcommand*{\ConcatMap}[1]{\Foldr{\Compose\Append{#1}}\Nil}
\newcommand*{\ListAnd}{\Foldr\BoolAnd\False}
\newcommand*{\ListOr}{\Foldr\BoolOr\False}
\newcommand*{\ListAny}{\Some}
\newcommand*{\ListAll}{\All}

% Building lists
\newcommand*{\Scanl}[3]{\Foldr{\Scanl@{#1}}\Singleton{#3}{#2}}
\newcommand*{\Scanl@}[4]{\Cons{#4}{#3{#1{#4}{#2}}}}
\newcommand*{\ScanlI}[2]{\If{\Null{#2}}\Nil{\Scanl{#1}{\Head{#2}}{\Tail{#2}}}}
\newcommand*{\Scanr}[2]{\Foldr{\Scanr@{#1}}{\Singleton{#2}}}
\newcommand*{\Scanr@}[3]{\Cons{#1{#2}{\Head{#3}}}{#3}}
\newcommand*{\ScanrI}[2]{\If{\Null{#2}}\Nil{\Foldr{\ScanrI@{#1}}\Singleton{\Tail{#2}}{\Head{#2}}}}
\newcommand*{\ScanrI@}[4]{\Cons{#1{#4}{\Head{#3{#2}}}}{#3{#2}}}

% Infinite lists
\newcommand*{\Iterate}[2]{\Cons{#2}{\Iterate{#1}{#1{#2}}}}
\newcommand*{\Repeat}{\Stream}
\newcommand*{\Replicate}[2]{\Take{#1}{\Repeat{#2}}}
\newcommand*{\Cycle}{\Compose\Concat\Repeat}

% Unfolding
\newcommand*{\Unfoldr}[2]{\Unfoldr@{#1}{#1{#2}}}
\newcommand*{\Unfoldr@}[2]{\If{\IsNothing{#2}}\Nil{\Unfoldr@@{#1}{\FromJust{#2}}}}
\newcommand*{\Unfoldr@@}[2]{\Cons{\Fst{#2}}{\Unfoldr{#1}{\Snd{#2}}}}

% Sublists
\newcommand*{\Take}[2]{\Foldr\Take@{\Const\Nil}{#2}{#1}}
\newcommand*{\Take@}[3]{\Iftex{\ifnum#3=0 }{\Nil}{\Cons{#1}{#2{\numexpr#3-1}}}}
\newcommand*{\Drop}[2]{\Foldr\Drop@{\Const\Nil}{#2}{#1}}
\newcommand*{\Drop@}[3]{\Iftex{\ifnum#3=0 }{\Cons{#1}{#2{0}}}{#2{\numexpr#3-1}}}
\newcommand*{\SplitAt}[2]{\Pair{\Take{#1}{#2}}{\Drop{#1}{#2}}}
\newcommand*{\TakeWhile}[2]{\Foldr{\TakeWhile@{#1}}\Nil{#2}}
\newcommand*{\TakeWhile@}[3]{\If{#1{#2}}{\Cons{#2}{#3}}\Nil}
\newcommand*{\DropWhile}[2]{\Foldr{\DropWhile@{#1}}{\Const\Nil}{#2}\True}
\newcommand*{\DropWhile@}[4]{%
    \If{#4}{%
        \If{#1{#2}}{%
            #3\True%
        }{%
            \Cons{#2}{#3\False}%
        }%
    }{%
        \Cons{#2}{#3\False}%
    }%
}
\newcommand*{\Span}[2]{\Pair{\TakeWhile{#1}{#2}}{\DropWhile{#1}{#2}}}
\newcommand*{\Break}[1]{\Span{\Compose\Not{#1}}}
\newcommand*{\Inits}{\Foldr\Inits@{\Singleton\Nil}}
\newcommand*{\Inits@}[2]{\Cons\Nil{\Map{\Cons{#1}}{#2}}}
\newcommand*{\Tails}{\Foldr\Tails@{\Singleton\Nil}}
\newcommand*{\Tails@}[2]{\Cons{\Cons{#1}{\Head{#2}}}{#2}}


% Predicates
% TODO

% Indexing lists
\newcommand*{\Nth}[2]{\Head{\Drop{#1}{#2}}}

% Zipping and unzipping lists
\newcommand*{\Zip}{\ZipWith{\Pair}}
\newcommand*{\ZipWith}[1]{\Foldr{\ZipWith@{#1}}{\Const\Nil}}
\newcommand*{\ZipWith@}[4]{\If{\Null{#4}}{\Nil}{\Cons{#1{#2}{\Head{#4}}}{#3{\Tail{#4}}}}}
\newcommand*{\Unzip}{\Foldr\Unzip@{\Pair\Nil\Nil}}
\newcommand*{\Unzip@}[2]{\Pair{\Cons{\Fst{#1}}{\Fst{#2}}}{\Cons{\Snd{#1}}{\Snd{#2}}}}

% Functions on strings
% TODO

% Set operations
% TODO

% List equality
\newcommand*{\EqualWith}[1]{\Foldr{\EqualWith@{#1}}\Null}
\newcommand*{\EqualWith@}[4]{%
    \If{\Null{#4}}{%
        \False%
    }{%
        \If{#1{#2}{\Head{#4}}}{%
            #3{\Tail{#4}}%
        }{%
            \False%
        }%
    }%
}

% Foreach
%    \Foreach{\CountRange{1}{10}}{%
%        \Foreach{\CountRange{1}{10}}{%
%            #1 \times ##1 = \\
%        }%
%    }%
\newcommand*{\Foreach}[2]{\ForeachImpl{\Proc{#2}}{#1}}
\newcommand*{\ForeachImpl}[1]{\Foldr{\ForeachImpl@{#1}}{}}
\newcommand*{\ForeachImpl@}[3]{#1{#2}#3}


% Pair
%

\newcommand*{\Pair}[3]{#3{#1}{#2}}
\newcommand*{\Fst}[1]{#1\True}
\newcommand*{\Snd}[1]{#1\False}
\newcommand*{\Curry}[3]{#1{\Pair{#2}{#3}}}
\newcommand*{\Uncurry}[2]{#1{\Fst{#2}}{\Snd{#2}}}
\newcommand*{\Swap}[1]{\Pair{\Snd{#1}}{\Fst{#1}}}
\newcommand*{\Unpair@}[1]{\Fst{#1}\Snd{#1}} % impossible to implement?
\newcommand*{\ShowPair}[1]{(\ShowPair@{#1})}
\newcommand*{\ShowPair@}[1]{\Fst{#1},\Snd{#1}}
\newcommand*{\PairToList}[1]{\Cons{\Fst{#1}}{\Cons{\Snd{#1}}\Nil}}


% Maybe
%

\newcommand*{\Nothing}{\False}
\newcommand*{\Just}[3]{#2{#1}}
\newcommand*{\IsJust}[1]{#1{\Const\True}\False}
\newcommand*{\IsNothing}{\Compose\Not\IsJust}
\newcommand*{\FromJust}[1]{#1\Id{\ErrorMsg{FromJust Nothing}}}
\newcommand*{\MaybeToList}[1]{#1\Singleton\Nil}
\newcommand*{\ListToMaybe}{\Foldr\ListToMaybe@\Nothing}
\newcommand*{\ListToMaybe@}[2]{\Just{#1}}


% Anonymous procedures
%

\newcounter{ProcCounter}
\newcommand*{\Proc}{%
    \stepcounter{ProcCounter}%
    \ProcNamed@{Proc\the\value{ProcCounter}}%
}
\newcommand*{\ProcNamed@}[2]{%
    \expandafter\newcommand\csname#1\endcsname[1]{#2}\csuse{#1}%
}


% Local variables
%
%    \Local{
%        c4,n5
%    }{ ... 1+3 = \c ... }
%

\newcommand*{\LocalI}[2]{%
    \LocalI@#1% strip braces
    #2%
    \UnletI@#1%
}
\newcommand*{\LocalI@}[2]{%
    \expandafter\def\csname#1\endcsname{#2}%
}
\newcommand*{\UnletI@}[2]{%
    \expandafter\let\csname#1\endcsname\@undefined%
}
\newcommand*{\Local}[2]{\Foldr\LocalI{#2}{\List{#1}}}


% Misc
%

\newcommand*{\Empty}{}
\newcommand*{\Unuse}[1]{}
\newcommand{\Comment}[1]{}
\newcommand*{\Sandwich}[2]{#1#2#1}
\newcommand*{\ExpandII}[2]{#1#2}
\newcommand*{\ExpandIII}[3]{#1#2#3}
\newcommand*{\ExpandSwap}[2]{#2#1}
\newcommand*{\ExpandMap}[2]{\Expand{\Map{#1}{\List{#2}}}}
\newcommand*{\ExpandWith}{\Compose\ExpandMap\ExpandII}
\newcommand*{\ItemList}{\ExpandWith{\item}}

\newcommand*{\Env}[2]{\begin{#1}#2\end{#1}}
\newcommand*{\EnvWith}[3]{\begin{#1}[#2]#3\end{#1}}
\newcommand*{\EnvBrack}[3]{\begin{#1}[#2]#3\end{#1}}
\newcommand*{\EnvBrace}[3]{\begin{#1}{#2}#3\end{#1}}
\newcommand*{\EnvList}[2]{\Foldr\Env{#2}{\List{#1}}}

\newcommand*{\InList}[2]{\Foldr\In{#2}{\List{#1}}}% @deprecated, renamed to EnvList
\newcommand*{\In}[2]{\begin{#1}#2\end{#1}}% @deprecated, renamed to Env

\newcommand*{\Math}{\Env{math}}% no ensuremath
\newcommand*{\DisplayMath}{\Env{displaymath}}


% Arithmetic
%

\newcommand*{\NumInc}[1]{\ifcase#1 %
    1\or2\or3\or4\or5\or6\or7\or8\or9\or10\or%
    11\or12\or13\or14\or15\or16\or17\or18\or19\or20\or%
    21\or22\or23\or24\or25\or26\or27\or28\or29\or30\or%
    31\or32\or33\or34\or35\or36\or37\or38\or39\or40\or%
    41\or42\or43\or44\or45\or46\or47\or48\or49\or50\or%
    51\or52\or53\or54\or55\or56\or57\or58\or59\or60\or%
    61\or62\or63\or64\or65\or66\or67\or68\or69\or70\or%
    71\or72\or73\or74\or75\or76\or77\or78\or79\or80\or%
    81\or82\or83\or84\or85\or86\or87\or88\or89\or90\or%
    91\or92\or93\or94\or95\or96\or97\or98\or99\or100\or%
    101\or102\or103\or104\or105\or106\or107\or108\or109\or110\or%
    111\or112\or113\or114\or115\or116\or117\or118\or119\or120\or%
    121\or122\or123\or124\or125\or126\or127\or128\or129\or130\or%
    131\or132\or133\or134\or135\or136\or137\or138\or139\or140\or%
    141\or142\or143\or144\or145\or146\or147\or148\or149\or150\or%
    151\or152\or153\or154\or155\or156\or157\or158\or159\or160\or%
    161\or162\or163\or164\or165\or166\or167\or168\or169\or170\or%
    171\or172\or173\or174\or175\or176\or177\or178\or179\or180\or%
    181\or182\or183\or184\or185\or186\or187\or188\or189\or190\or%
    191\or192\or193\or194\or195\or196\or197\or198\or199\or200\or%
    201\or202\or203\or204\or205\or206\or207\or208\or209\or210\or%
    211\or212\or213\or214\or215\or216\or217\or218\or219\or220\or%
    221\or222\or223\or224\or225\or226\or227\or228\or229\or230\or%
    231\or232\or233\or234\or235\or236\or237\or238\or239\or240\or%
    241\or242\or243\or244\or245\or246\or247\or248\or249\or250\or%
    251\or252\or253\or254\or255\or256\or257\or258\or259\or260\or%
    261\or262\or263\or264\or265\or266\or267\or268\or269\or270\or%
    271\or272\or273\or274\or275\or276\or277\or278\or279\or280\or%
    281\or282\or283\or284\or285\or286\or287\or288\or289\or290\or%
    291\or292\or293\or294\or295\or296\or297\or298\or299\or300\or%
    301\or302\or303\or304\or305\or306\or307\or308\or309\or310\or%
    311\or312\or313\or314\or315\or316\or317\or318\or319\or320\or%
    321\or322\or323\or324\or325\or326\or327\or328\or329\or330\or%
    331\or332\or333\or334\or335\or336\or337\or338\or339\or340\or%
    341\or342\or343\or344\or345\or346\or347\or348\or349\or350\or%
    351\or352\or353\or354\or355\or356\or357\or358\or359\or360\or%
    361\or362\or363\or364\or365\or366\or367\or368\or369\or370\or%
    371\or372\or373\or374\or375\or376\or377\or378\or379\or380\or%
    381\or382\or383\or384\or385\or386\or387\or388\or389\or390\or%
    391\or392\or393\or394\or395\or396\or397\or398\or399\or400\or%
    401\or402\or403\or404\or405\or406\or407\or408\or409\or410\or%
    411\or412\or413\or414\or415\or416\or417\or418\or419\or420\or%
    421\or422\or423\or424\or425\or426\or427\or428\or429\or430\or%
    431\or432\or433\or434\or435\or436\or437\or438\or439\or440\or%
    441\or442\or443\or444\or445\or446\or447\or448\or449\or450\or%
    451\or452\or453\or454\or455\or456\or457\or458\or459\or460\or%
    461\or462\or463\or464\or465\or466\or467\or468\or469\or470\or%
    471\or472\or473\or474\or475\or476\or477\or478\or479\or480\or%
    481\or482\or483\or484\or485\or486\or487\or488\or489\or490\or%
    491\or492\or493\or494\or495\or496\or497\or498\or499\or500\else\Undefined\fi%
}
\newcommand*{\NumDec}[1]{\ifcase#1\Undefined\or0\or%
    1\or2\or3\or4\or5\or6\or7\or8\or9\or10\or%
    11\or12\or13\or14\or15\or16\or17\or18\or19\or20\or%
    21\or22\or23\or24\or25\or26\or27\or28\or29\or30\or%
    31\or32\or33\or34\or35\or36\or37\or38\or39\or40\or%
    41\or42\or43\or44\or45\or46\or47\or48\or49\or50\or%
    51\or52\or53\or54\or55\or56\or57\or58\or59\or60\or%
    61\or62\or63\or64\or65\or66\or67\or68\or69\or70\or%
    71\or72\or73\or74\or75\or76\or77\or78\or79\or80\or%
    81\or82\or83\or84\or85\or86\or87\or88\or89\or90\or%
    91\or92\or93\or94\or95\or96\or97\or98\or99\or100\or%
    101\or102\or103\or104\or105\or106\or107\or108\or109\or110\or%
    111\or112\or113\or114\or115\or116\or117\or118\or119\or120\or%
    121\or122\or123\or124\or125\or126\or127\or128\or129\or130\or%
    131\or132\or133\or134\or135\or136\or137\or138\or139\or140\or%
    141\or142\or143\or144\or145\or146\or147\or148\or149\or150\or%
    151\or152\or153\or154\or155\or156\or157\or158\or159\or160\or%
    161\or162\or163\or164\or165\or166\or167\or168\or169\or170\or%
    171\or172\or173\or174\or175\or176\or177\or178\or179\or180\or%
    181\or182\or183\or184\or185\or186\or187\or188\or189\or190\or%
    191\or192\or193\or194\or195\or196\or197\or198\or199\or200\or%
    201\or202\or203\or204\or205\or206\or207\or208\or209\or210\or%
    211\or212\or213\or214\or215\or216\or217\or218\or219\or220\or%
    221\or222\or223\or224\or225\or226\or227\or228\or229\or230\or%
    231\or232\or233\or234\or235\or236\or237\or238\or239\or240\or%
    241\or242\or243\or244\or245\or246\or247\or248\or249\or250\or%
    251\or252\or253\or254\or255\or256\or257\or258\or259\or260\or%
    261\or262\or263\or264\or265\or266\or267\or268\or269\or270\or%
    271\or272\or273\or274\or275\or276\or277\or278\or279\or280\or%
    281\or282\or283\or284\or285\or286\or287\or288\or289\or290\or%
    291\or292\or293\or294\or295\or296\or297\or298\or299\or300\or%
    301\or302\or303\or304\or305\or306\or307\or308\or309\or310\or%
    311\or312\or313\or314\or315\or316\or317\or318\or319\or320\or%
    321\or322\or323\or324\or325\or326\or327\or328\or329\or330\or%
    331\or332\or333\or334\or335\or336\or337\or338\or339\or340\or%
    341\or342\or343\or344\or345\or346\or347\or348\or349\or350\or%
    351\or352\or353\or354\or355\or356\or357\or358\or359\or360\or%
    361\or362\or363\or364\or365\or366\or367\or368\or369\or370\or%
    371\or372\or373\or374\or375\or376\or377\or378\or379\or380\or%
    381\or382\or383\or384\or385\or386\or387\or388\or389\or390\or%
    391\or392\or393\or394\or395\or396\or397\or398\or399\or400\or%
    401\or402\or403\or404\or405\or406\or407\or408\or409\or410\or%
    411\or412\or413\or414\or415\or416\or417\or418\or419\or420\or%
    421\or422\or423\or424\or425\or426\or427\or428\or429\or430\or%
    431\or432\or433\or434\or435\or436\or437\or438\or439\or440\or%
    441\or442\or443\or444\or445\or446\or447\or448\or449\or450\or%
    451\or452\or453\or454\or455\or456\or457\or458\or459\or460\or%
    461\or462\or463\or464\or465\or466\or467\or468\or469\or470\or%
    471\or472\or473\or474\or475\or476\or477\or478\or479\or480\or%
    481\or482\or483\or484\or485\or486\or487\or488\or489\or490\or%
    491\or492\or493\or494\or495\or496\or497\or498\or499\or500\else\Undefined\fi%
}

\newcommand*{\NumPlus}[2]{\ApplyNTimesII{#2}{\NumInc}{#1}}
\newcommand*{\NumMinus}[2]{\ApplyNTimesII{#2}{\NumDec}{#1}}
\newcommand*{\NumMult}[2]{\ApplyNTimesII{#2}{\NumPlus{#1}}{0}}
\newcommand*{\NumLess}{\Lessthan}
\newcommand*{\NumGtr}[2]{\Iftex{\ifnum#1>#2 }}
\newcommand*{\NumEq}[2]{\Iftex{\ifnum#1=#2 }}
\newcommand*{\DimEq}[2]{\Iftex{\ifdim#1=#2 }}

\newcommand*{\ApplyNTimesI}[3]{\Nth{#1}{\Iterate{#2}{#3}}}
\newcommand*{\ApplyNTimesII}[3]{%
    \If{\NumEq{#1}{0}}{%
        #3%
    }{%
        #2{\ApplyNTimesII{\NumDec{#1}}{#2}{#3}}%
    }%
}


% Ranges
%

\newcommand*{\CountRange}[2]{\TakeWhile{\NumGtr{#2}}{\Iterate{\NumInc}{#1}}}


